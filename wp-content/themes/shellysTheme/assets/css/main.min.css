a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:Bosk;src:local("Bosk"),url(../../../../fonts/Bosk.ttf) format("truetype");font-weight:400}*{box-sizing:border-box}body,html{width:100%;height:100%;background-color:#fcfcfc}.navbar-logo{width:30%}.background-image{background-image:url(../../../../uploads/2017/10/erik-odiin-407939-1024x683.jpg);background-repeat:no-repeat;width:100%;height:50vh;background-size:cover;background-position:50%;margin-bottom:10%}.typography{position:absolute;font-family:Bosk;color:#fd665c;font-size:5em;top:65%;right:2%;transform:rotate(-25deg)}@media screen and (min-width:600px){.background-image{width:100%;height:100vh}.typography{font-size:12em;top:80%;right:2%}}.header-section{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center}.profile-picture{background-repeat:no-repeat;width:300px;height:300px;border-radius:100%;background-size:cover;background-position-y:25%;-webkit-filter:contrast(70%);filter:contrast(70%)}.headline{font-size:3em;font-family:Merriweather,serif;margin:4% 0;text-align:center}.subline{width:60%;text-align:center;margin-bottom:2%}.email,.subline{font-size:1.5em;font-family:Raleway,sans-serif}.email{margin-bottom:10%;color:#fd665c;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:hsla(4,98%,68%,.18);padding-bottom:.4em}.email:hover{transition:border-color .15s ease-out,color .15s ease-out;border-bottom-color:#fd665c;border-bottom-width:2px}.social:hover{-webkit-transform:scale(1.1);-moz-transform:scale(1.1);-o-transform:scale(1.1)}.social{-webkit-transform:scale(.8);-moz-transform:scale(.8);-o-transform:scale(.8);-webkit-transition-duration:.5s;-moz-transition-duration:.5s;-o-transition-duration:.5s}#social-fb:hover{color:#3b5998}#social-tw:hover{color:#4099ff}#social-gp:hover{color:#d34836}#social-em:hover{color:#f39c12}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
